# coding: utf-8

"""
    Pose Transform

    API server for PoseTransformGAN  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: ttakamura@preferred.jp
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.joint import Joint  # noqa: F401,E501


class Bone(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'nose': 'Joint',
        'neck': 'Joint',
        'spine': 'Joint',
        'waist': 'Joint',
        'l_shoulder': 'Joint',
        'r_shoulder': 'Joint',
        'l_elbow': 'Joint',
        'r_elbow': 'Joint',
        'l_hand': 'Joint',
        'r_hand': 'Joint',
        'l_fist': 'Joint',
        'r_fist': 'Joint',
        'l_waist': 'Joint',
        'r_waist': 'Joint',
        'l_knee': 'Joint',
        'r_knee': 'Joint',
        'l_foot': 'Joint',
        'r_foot': 'Joint',
        'l_toes': 'Joint',
        'r_toes': 'Joint'
    }

    attribute_map = {
        'nose': 'nose',
        'neck': 'neck',
        'spine': 'spine',
        'waist': 'waist',
        'l_shoulder': 'L_shoulder',
        'r_shoulder': 'R_shoulder',
        'l_elbow': 'L_elbow',
        'r_elbow': 'R_elbow',
        'l_hand': 'L_hand',
        'r_hand': 'R_hand',
        'l_fist': 'L_fist',
        'r_fist': 'R_fist',
        'l_waist': 'L_waist',
        'r_waist': 'R_waist',
        'l_knee': 'L_knee',
        'r_knee': 'R_knee',
        'l_foot': 'L_foot',
        'r_foot': 'R_foot',
        'l_toes': 'L_toes',
        'r_toes': 'R_toes'
    }

    def __init__(self, nose=None, neck=None, spine=None, waist=None, l_shoulder=None, r_shoulder=None, l_elbow=None, r_elbow=None, l_hand=None, r_hand=None, l_fist=None, r_fist=None, l_waist=None, r_waist=None, l_knee=None, r_knee=None, l_foot=None, r_foot=None, l_toes=None, r_toes=None):  # noqa: E501
        """Bone - a model defined in Swagger"""  # noqa: E501

        self._nose = None
        self._neck = None
        self._spine = None
        self._waist = None
        self._l_shoulder = None
        self._r_shoulder = None
        self._l_elbow = None
        self._r_elbow = None
        self._l_hand = None
        self._r_hand = None
        self._l_fist = None
        self._r_fist = None
        self._l_waist = None
        self._r_waist = None
        self._l_knee = None
        self._r_knee = None
        self._l_foot = None
        self._r_foot = None
        self._l_toes = None
        self._r_toes = None
        self.discriminator = None

        if nose is not None:
            self.nose = nose
        if neck is not None:
            self.neck = neck
        if spine is not None:
            self.spine = spine
        if waist is not None:
            self.waist = waist
        if l_shoulder is not None:
            self.l_shoulder = l_shoulder
        if r_shoulder is not None:
            self.r_shoulder = r_shoulder
        if l_elbow is not None:
            self.l_elbow = l_elbow
        if r_elbow is not None:
            self.r_elbow = r_elbow
        if l_hand is not None:
            self.l_hand = l_hand
        if r_hand is not None:
            self.r_hand = r_hand
        if l_fist is not None:
            self.l_fist = l_fist
        if r_fist is not None:
            self.r_fist = r_fist
        if l_waist is not None:
            self.l_waist = l_waist
        if r_waist is not None:
            self.r_waist = r_waist
        if l_knee is not None:
            self.l_knee = l_knee
        if r_knee is not None:
            self.r_knee = r_knee
        if l_foot is not None:
            self.l_foot = l_foot
        if r_foot is not None:
            self.r_foot = r_foot
        if l_toes is not None:
            self.l_toes = l_toes
        if r_toes is not None:
            self.r_toes = r_toes

    @property
    def nose(self):
        """Gets the nose of this Bone.  # noqa: E501


        :return: The nose of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._nose

    @nose.setter
    def nose(self, nose):
        """Sets the nose of this Bone.


        :param nose: The nose of this Bone.  # noqa: E501
        :type: Joint
        """

        self._nose = nose

    @property
    def neck(self):
        """Gets the neck of this Bone.  # noqa: E501


        :return: The neck of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._neck

    @neck.setter
    def neck(self, neck):
        """Sets the neck of this Bone.


        :param neck: The neck of this Bone.  # noqa: E501
        :type: Joint
        """

        self._neck = neck

    @property
    def spine(self):
        """Gets the spine of this Bone.  # noqa: E501


        :return: The spine of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._spine

    @spine.setter
    def spine(self, spine):
        """Sets the spine of this Bone.


        :param spine: The spine of this Bone.  # noqa: E501
        :type: Joint
        """

        self._spine = spine

    @property
    def waist(self):
        """Gets the waist of this Bone.  # noqa: E501


        :return: The waist of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._waist

    @waist.setter
    def waist(self, waist):
        """Sets the waist of this Bone.


        :param waist: The waist of this Bone.  # noqa: E501
        :type: Joint
        """

        self._waist = waist

    @property
    def l_shoulder(self):
        """Gets the l_shoulder of this Bone.  # noqa: E501


        :return: The l_shoulder of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._l_shoulder

    @l_shoulder.setter
    def l_shoulder(self, l_shoulder):
        """Sets the l_shoulder of this Bone.


        :param l_shoulder: The l_shoulder of this Bone.  # noqa: E501
        :type: Joint
        """

        self._l_shoulder = l_shoulder

    @property
    def r_shoulder(self):
        """Gets the r_shoulder of this Bone.  # noqa: E501


        :return: The r_shoulder of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._r_shoulder

    @r_shoulder.setter
    def r_shoulder(self, r_shoulder):
        """Sets the r_shoulder of this Bone.


        :param r_shoulder: The r_shoulder of this Bone.  # noqa: E501
        :type: Joint
        """

        self._r_shoulder = r_shoulder

    @property
    def l_elbow(self):
        """Gets the l_elbow of this Bone.  # noqa: E501


        :return: The l_elbow of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._l_elbow

    @l_elbow.setter
    def l_elbow(self, l_elbow):
        """Sets the l_elbow of this Bone.


        :param l_elbow: The l_elbow of this Bone.  # noqa: E501
        :type: Joint
        """

        self._l_elbow = l_elbow

    @property
    def r_elbow(self):
        """Gets the r_elbow of this Bone.  # noqa: E501


        :return: The r_elbow of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._r_elbow

    @r_elbow.setter
    def r_elbow(self, r_elbow):
        """Sets the r_elbow of this Bone.


        :param r_elbow: The r_elbow of this Bone.  # noqa: E501
        :type: Joint
        """

        self._r_elbow = r_elbow

    @property
    def l_hand(self):
        """Gets the l_hand of this Bone.  # noqa: E501


        :return: The l_hand of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._l_hand

    @l_hand.setter
    def l_hand(self, l_hand):
        """Sets the l_hand of this Bone.


        :param l_hand: The l_hand of this Bone.  # noqa: E501
        :type: Joint
        """

        self._l_hand = l_hand

    @property
    def r_hand(self):
        """Gets the r_hand of this Bone.  # noqa: E501


        :return: The r_hand of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._r_hand

    @r_hand.setter
    def r_hand(self, r_hand):
        """Sets the r_hand of this Bone.


        :param r_hand: The r_hand of this Bone.  # noqa: E501
        :type: Joint
        """

        self._r_hand = r_hand

    @property
    def l_fist(self):
        """Gets the l_fist of this Bone.  # noqa: E501


        :return: The l_fist of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._l_fist

    @l_fist.setter
    def l_fist(self, l_fist):
        """Sets the l_fist of this Bone.


        :param l_fist: The l_fist of this Bone.  # noqa: E501
        :type: Joint
        """

        self._l_fist = l_fist

    @property
    def r_fist(self):
        """Gets the r_fist of this Bone.  # noqa: E501


        :return: The r_fist of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._r_fist

    @r_fist.setter
    def r_fist(self, r_fist):
        """Sets the r_fist of this Bone.


        :param r_fist: The r_fist of this Bone.  # noqa: E501
        :type: Joint
        """

        self._r_fist = r_fist

    @property
    def l_waist(self):
        """Gets the l_waist of this Bone.  # noqa: E501


        :return: The l_waist of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._l_waist

    @l_waist.setter
    def l_waist(self, l_waist):
        """Sets the l_waist of this Bone.


        :param l_waist: The l_waist of this Bone.  # noqa: E501
        :type: Joint
        """

        self._l_waist = l_waist

    @property
    def r_waist(self):
        """Gets the r_waist of this Bone.  # noqa: E501


        :return: The r_waist of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._r_waist

    @r_waist.setter
    def r_waist(self, r_waist):
        """Sets the r_waist of this Bone.


        :param r_waist: The r_waist of this Bone.  # noqa: E501
        :type: Joint
        """

        self._r_waist = r_waist

    @property
    def l_knee(self):
        """Gets the l_knee of this Bone.  # noqa: E501


        :return: The l_knee of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._l_knee

    @l_knee.setter
    def l_knee(self, l_knee):
        """Sets the l_knee of this Bone.


        :param l_knee: The l_knee of this Bone.  # noqa: E501
        :type: Joint
        """

        self._l_knee = l_knee

    @property
    def r_knee(self):
        """Gets the r_knee of this Bone.  # noqa: E501


        :return: The r_knee of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._r_knee

    @r_knee.setter
    def r_knee(self, r_knee):
        """Sets the r_knee of this Bone.


        :param r_knee: The r_knee of this Bone.  # noqa: E501
        :type: Joint
        """

        self._r_knee = r_knee

    @property
    def l_foot(self):
        """Gets the l_foot of this Bone.  # noqa: E501


        :return: The l_foot of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._l_foot

    @l_foot.setter
    def l_foot(self, l_foot):
        """Sets the l_foot of this Bone.


        :param l_foot: The l_foot of this Bone.  # noqa: E501
        :type: Joint
        """

        self._l_foot = l_foot

    @property
    def r_foot(self):
        """Gets the r_foot of this Bone.  # noqa: E501


        :return: The r_foot of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._r_foot

    @r_foot.setter
    def r_foot(self, r_foot):
        """Sets the r_foot of this Bone.


        :param r_foot: The r_foot of this Bone.  # noqa: E501
        :type: Joint
        """

        self._r_foot = r_foot

    @property
    def l_toes(self):
        """Gets the l_toes of this Bone.  # noqa: E501


        :return: The l_toes of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._l_toes

    @l_toes.setter
    def l_toes(self, l_toes):
        """Sets the l_toes of this Bone.


        :param l_toes: The l_toes of this Bone.  # noqa: E501
        :type: Joint
        """

        self._l_toes = l_toes

    @property
    def r_toes(self):
        """Gets the r_toes of this Bone.  # noqa: E501


        :return: The r_toes of this Bone.  # noqa: E501
        :rtype: Joint
        """
        return self._r_toes

    @r_toes.setter
    def r_toes(self, r_toes):
        """Sets the r_toes of this Bone.


        :param r_toes: The r_toes of this Bone.  # noqa: E501
        :type: Joint
        """

        self._r_toes = r_toes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Bone):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
